{"version":3,"sources":["index.js"],"names":["Library","props","state","library","newBook","title","author","pages","key","currentKey","handleInputchange","bind","handleSubmit","onBookDelete","onBookEditSubmit","event","target","name","value","updatedBook","this","setState","e","preventDefault","book","Object","assign","updatedLibrary","concat","index","findIndex","newLibrary","splice","newTitle","newAuthor","newPages","editedBook","className","onSubmit","TextInput","label","onInputChange","placeholder","pattern","type","BookList","books","onDelete","React","Component","bookDivs","map","Book","handleDelete","status","editFormTitle","editFormAuthor","editFormPages","handleDeleteClicked","handleEditClicked","handleEditSubmit","editFormOnChange","onClick","id","onChange","aria-hidden","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6e5f9d4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\nclass Library extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      library: [],\n      newBook: {\n        title: '',\n        author: '',\n        pages: '',\n        key: ''\n      },\n      currentKey: 0\n    }\n\n    this.handleInputchange = this.handleInputchange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onBookDelete = this.onBookDelete.bind(this);\n    this.onBookEditSubmit = this.onBookEditSubmit.bind(this);\n    }\n\n  handleInputchange(event) {\n  \n    const target = event.target;\n    const name = target.name;\n    const value = target.value\n\n    let updatedBook = {...this.state.newBook};\n    updatedBook[name] = value;\n\n    this.setState({newBook: updatedBook});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n\n    if (!this.state.newBook.title) {return;}\n\n    let book = Object.assign({}, this.state.newBook);\n    let updatedLibrary = this.state.library.concat(book);\n\n    this.setState({library: updatedLibrary});\n\n    this.setState({newBook: {\n      title:'',\n      author: '',\n      pages: '',\n      key: this.state.currentKey +1\n    }})\n\n    this.setState({currentKey: this.state.currentKey +1})\n  }\n\n  onBookDelete(key) {\n    \n    const index = this.state.library.findIndex((book) =>  book.key === key);\n    \n    let newLibrary = this.state.library.concat();\n\n    newLibrary.splice(index,1);\n\n    this.setState({library: newLibrary});\n\n  }\n\n  onBookEditSubmit(key, newTitle, newAuthor, newPages) {\n    const index = this.state.library.findIndex((book => book.key === key));\n\n    let editedBook = this.state.library[index];\n    \n    editedBook.title = newTitle;\n    editedBook.author = newAuthor;\n    editedBook.pages = newPages;\n\n    let newLibrary = this.state.library.concat();\n\n    newLibrary.splice(index,1,editedBook);\n\n    this.setState({library: newLibrary});\n\n  }\n  \n  render() {\n    return (\n      <div>\n        <form className = {'form'} onSubmit = {this.handleSubmit}>\n          <TextInput \n            name = 'title'\n            label = 'Book Title' \n            value = {this.state.newBook.title} \n            onInputChange = {this.handleInputchange} \n            placeholder = 'Title' />\n          <TextInput \n            label = 'Author:' \n            name = 'author' \n            value = {this.state.newBook.author} \n            placeholder = 'Author'\n            onInputChange = {this.handleInputchange} />\n          <TextInput \n            label = 'Pages:' \n            name = 'pages' \n            value = {this.state.newBook.pages} \n            placeholder = 'Pages'\n            onInputChange = {this.handleInputchange} \n            pattern={\"^[0-9]*$\"}/>\n            <button className = {'submit-button'} type = 'submit'>Add Book</button>\n        </form>\n        <BookList books = {this.state.library} onDelete = {this.onBookDelete} onBookEditSubmit = {this.onBookEditSubmit}/>\n        \n      </div>\n    )\n  }\n\n}\n\n\nfunction BookList(props) {\n   const bookDivs = props.books.map((book) =>\n    <Book \n      book = {book} \n      key = {book.key} \n      handleDelete = {props.onDelete}\n      onBookEditSubmit = {props.onBookEditSubmit}\n      />\n  )   \n  return (\n    <div>\n      <div className = {'book-list-header'}>\n        <span>Title</span>\n        <span>Author</span>\n        <span>Pages</span>\n      </div>\n      {bookDivs}\n    </div>\n  )\n}\n\n\nclass Book extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'display',\n      editFormTitle: '',\n      editFormAuthor: '',\n      editFormPages: ''\n\n    } \n\n    this.handleDeleteClicked = this.handleDeleteClicked.bind(this);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.editFormOnChange = this.editFormOnChange.bind(this);\n  }\n  \n  handleDeleteClicked() {\n    this.props.handleDelete(this.props.book.key);\n  }\n\n  handleEditClicked() {\n    this.setState({status: 'edit'});\n  }\n\n  editFormOnChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({[name]: value})\n  }\n\n  handleEditSubmit() {\n\n    const title = (this.state.editFormTitle === '') ? this.props.book.title : this.state.editFormTitle;\n    const author = (this.state.editFormAuthor === '') ? this.props.book.author : this.state.editFormAuthor;\n    const pages = (this.state.editFormPages === '') ? this.props.book.pages : this.state.editFormPages;\n    \n    this.setState({status: 'display'})\n    this.props.onBookEditSubmit(\n      this.props.book.key,\n       title, \n       author, \n       pages \n       );\n\n       this.setState({editFormTitle: ''});\n       this.setState({editFormAuthor: ''});\n       this.setState({editFormPages: ''});\n  }\n\n  render() { \n    if (this.state.status === 'display') {\n      return (\n        \n          <div className = {'book'}>\n              <p>{this.props.book.title}</p>\n              <p>{this.props.book.author}</p>\n              <p>{this.props.book.pages}</p>\n              <button  onClick = {this.handleDeleteClicked} ><i className = \"fa fa-trash\" /></button>\n              <button  onClick = {this.handleEditClicked}><i className = \"fa fa-pencil-square-o\" /></button>\n            </div>\n      );\n    } else {\n      return (\n        <div>\n          <form className = {'edit-form'} onSubmit = {this.handleEditSubmit}>\n            <input \n              type = 'text' \n              name = 'editFormTitle'\n              id = 'new-title'\n              value = {this.state.editFormTitle}\n              placeholder = {this.props.book.title}\n              onChange = {this.editFormOnChange}/>\n            <input \n              type = 'text'\n              name = 'editFormAuthor'\n              id = 'new-author'\n              value = {this.state.editFormAuthor}\n              placeholder = {this.props.book.author}\n              onChange = {this.editFormOnChange} />\n            <input \n              type = 'text' \n              name = 'editFormPages'\n              id = 'new-pages'\n              value = {this.state.editFormPages}\n              placeholder = {this.props.book.pages}\n              onChange = {this.editFormOnChange}/>\n            <button \n              type = {'submit'} ><i className ={\"fa fa-check-circle\"} aria-hidden=\"true\"></i></button>\n          </form>\n        </div>\n      )\n    }\n  }\n}\n\n\nclass TextInput extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleInputchange = this.handleInputchange.bind(this);\n  }\n\n  handleInputchange(e) {\n    this.props.onInputChange(e);\n  }\n\n  render() {\n    return (\n        <div className = {'input-container'}>\n          <label htmlFor = {this.props.name}>\n            {this.props.label}\n          </label>\n            <input \n              type = 'text' \n              id = {this.props.name}\n              value = {this.props.value}\n              name = {this.props.name}\n              placeholder = {this.props.placeholder}\n              onChange = {this.handleInputchange} />\n        </div>\n    );\n  }\n}\n\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className = {'container'}>\n        <h1>My Book List</h1>\n        <Library />\n      </div>\n    )\n  }\n\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}